[{"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\index.tsx":"1","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\App.tsx":"3","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Navbar\\Navbar.tsx":"4","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\Profile.tsx":"5","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Header\\Header.tsx":"6","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Dialogs.tsx":"7","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\News\\News.tsx":"8","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Settings\\Settings.tsx":"9","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Music\\Music.tsx":"10","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPost.tsx":"11","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\Post\\Post.tsx":"13","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogItem\\DialogItem.tsx":"14","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Message\\Message.tsx":"15","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\store.ts":"16","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\profile-reducer.ts":"17","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\dialogs-reducer.ts":"18","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\sidebar-reducer.ts":"19","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\redux-store.ts":"20","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPostContainer.tsx":"21","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogsContainer.tsx":"22","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\users-reducer.ts":"23","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Users\\UsersContainer.tsx":"24","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Users\\Users.tsx":"25","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\common\\Preolader\\Preolader.tsx":"26","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileContainer.tsx":"27","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\auth-reducer.ts":"28","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Header\\HeaderContainer.tsx":"29","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\api\\api.ts":"30"},{"size":946,"mtime":1617378173790,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1607097706521,"results":"33","hashOfConfig":"32"},{"size":1168,"mtime":1617730773828,"results":"34","hashOfConfig":"32"},{"size":973,"mtime":1615663247576,"results":"35","hashOfConfig":"32"},{"size":450,"mtime":1618071338225,"results":"36","hashOfConfig":"32"},{"size":593,"mtime":1617907941079,"results":"37","hashOfConfig":"32"},{"size":1455,"mtime":1614278810568,"results":"38","hashOfConfig":"32"},{"size":164,"mtime":1607957992948,"results":"39","hashOfConfig":"32"},{"size":180,"mtime":1607957992857,"results":"40","hashOfConfig":"32"},{"size":168,"mtime":1607957993024,"results":"41","hashOfConfig":"32"},{"size":1089,"mtime":1613670095132,"results":"42","hashOfConfig":"32"},{"size":685,"mtime":1617637170305,"results":"43","hashOfConfig":"32"},{"size":499,"mtime":1608490381741,"results":"44","hashOfConfig":"32"},{"size":461,"mtime":1608480593555,"results":"45","hashOfConfig":"32"},{"size":350,"mtime":1616776237785,"results":"46","hashOfConfig":"32"},{"size":2427,"mtime":1611939312650,"results":"47","hashOfConfig":"48"},{"size":2250,"mtime":1617381974871,"results":"49","hashOfConfig":"32"},{"size":1754,"mtime":1614280634896,"results":"50","hashOfConfig":"32"},{"size":149,"mtime":1611936068881,"results":"51","hashOfConfig":"32"},{"size":792,"mtime":1619019205760,"results":"52","hashOfConfig":"32"},{"size":1033,"mtime":1614281438536,"results":"53","hashOfConfig":"32"},{"size":1203,"mtime":1614095466329,"results":"54","hashOfConfig":"32"},{"size":4693,"mtime":1619026363846,"results":"55","hashOfConfig":"32"},{"size":3840,"mtime":1619027705376,"results":"56","hashOfConfig":"32"},{"size":2206,"mtime":1619027026383,"results":"57","hashOfConfig":"32"},{"size":260,"mtime":1616959580766,"results":"58","hashOfConfig":"32"},{"size":1823,"mtime":1618073045648,"results":"59","hashOfConfig":"32"},{"size":844,"mtime":1617815568424,"results":"60","hashOfConfig":"32"},{"size":1371,"mtime":1618074519131,"results":"61","hashOfConfig":"32"},{"size":1241,"mtime":1619025400235,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"1sxixod",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6vyjqc",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"65"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"65"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"65"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\index.tsx",[],["134","135"],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\App.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Navbar\\Navbar.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\Profile.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Header\\Header.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Dialogs.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\News\\News.tsx",["136"],"import React from \"react\";\r\nimport s from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n  return (\r\n    <div>\r\n      News\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Settings\\Settings.tsx",["137"],"import React from \"react\";\r\nimport s from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <div>\r\n      Settings\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Music\\Music.tsx",["138"],"import React from \"react\";\r\nimport s from \"./Musik.module.css\"\r\n\r\nconst Music = () => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPost.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileInfo\\ProfileInfo.tsx",["139"],"import React from \"react\";\r\nimport { UserProfileType } from \"../../../redux/profile-reducer\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preolader/Preolader\";\r\n\r\ntype ProfileInfoType = {\r\n  profile: UserProfileType | null\r\n\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoType) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src=\"https://tinypng.com/images/social/website.jpg\" alt=\"\"/>\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.large} />\r\n        ava + description\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\Post\\Post.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogItem\\DialogItem.tsx",["140"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"../Dialogs.module.css\"\r\nimport {v1} from \"uuid\";\r\n\r\ntype DialogsItemType = {\r\n  name: string\r\n  _id: string\r\n}\r\n\r\nconst DialogItem = (props: DialogsItemType) => {\r\n  let path = \"/dialogs/\" + props._id;\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Message\\Message.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\store.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\profile-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\dialogs-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\sidebar-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\redux-store.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPostContainer.tsx",["141"],"import React, {Dispatch} from \"react\";\r\nimport {addPostAC, changeNewTextAC, PostType} from \"../../../redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../../redux/redux-store\";\r\nimport {Action} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n  message: string,\r\n  posts: Array<PostType>\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n  addPost: () => void\r\n  onPostChange: (newText: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    message: state.profilePage.newPostText,\r\n    posts: state.profilePage.posts,\r\n  }\r\n};\r\n\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<Action<string>>): MapDispatchToPropsType => {\r\n  return {\r\n    addPost: () => {\r\n      dispatch(addPostAC())\r\n    },\r\n    onPostChange: (newText: string) => {\r\n      dispatch(changeNewTextAC(newText));\r\n    },\r\n  }\r\n};\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps) (MyPost)\r\n\r\nexport default MyPostContainer;\r\n","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogsContainer.tsx",["142"],"import React, {Dispatch} from \"react\";\r\nimport {sendMessageBodyAC,changeNewMessageBodyAC,DialogType, MessageType} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport { RootStateType } from \"../../redux/redux-store\";\r\nimport { Action } from \"redux\";\r\n\r\ntype MapStateToPropsType ={\r\n  dialogs: Array<DialogType>\r\n  message: string\r\n  messages: Array<MessageType>\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n  onSendMessageClick: () => void\r\n  onNewMessageChange: (newTextBody: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStateToPropsType=> {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    message: state.dialogsPage.newMessageBody,\r\n    messages: state.dialogsPage.messages\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<Action<string>>): MapDispatchToPropsType => {\r\n  return {\r\n    onSendMessageClick: () => {\r\n      dispatch(sendMessageBodyAC())\r\n    },\r\n    onNewMessageChange: (newTextBody: string) => {\r\n      dispatch(changeNewMessageBodyAC(newTextBody))\r\n    },\r\n  }\r\n};\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (Dialogs);\r\n\r\nexport default DialogsContainer;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\users-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Users\\UsersContainer.tsx",["143","144"],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Users\\Users.tsx",["145","146","147"],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\common\\Preolader\\Preolader.tsx",["148"],"import preloader from \"../../../assets/images/preolader.svg\";\r\nimport React from \"react\";\r\n\r\ntype PreloaderType = {}\r\n\r\nlet Preloader: React.FC<PreloaderType> = () => {\r\n return (\r\n   <>\r\n     <img src={preloader} />\r\n   </>\r\n )\r\n}\r\n\r\nexport default Preloader;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileContainer.tsx",["149"],"import React from \"react\";\r\nimport {setUserProfile, UserProfileType} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { userProfileAPI } from \"../../api/api\";\r\n\r\ntype MapStatePropsType = {\r\n  profile: UserProfileType | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n  setUserProfile: (profile: UserProfileType | null) => void\r\n}\r\n\r\ntype UserProfilePropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype PatchParamsType = {\r\n  userId: string\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PatchParamsType> & UserProfilePropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n  // componentDidMount() {\r\n  //   let userId = this.props.match.params.userId;\r\n  //   if (!userId) {\r\n  //     userId = \"2\";\r\n  //   }\r\n  //   axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n  //     .then(response => {\r\n  //       this.props.setUserProfile(response.data);\r\n  //     })\r\n  // }\r\n  //\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = \"2\";\r\n    }\r\n\r\n    userProfileAPI.setUserProfile(userId).then(data => {\r\n      this.props.setUserProfile(data)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props} profile={this.props.profile} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n  return {\r\n   profile: state.profilePage.profile\r\n  }\r\n};\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, {setUserProfile: setUserProfile})(WithUrlDataContainerComponent);","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\auth-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Header\\HeaderContainer.tsx",["150"],"import React from \"react\";\r\nimport {AuthStateType, setAuthUserData} from \"../../redux/auth-reducer\";\r\nimport Header from \"./Header\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\n\r\ntype MapStateToPropsType = {\r\n  isAuth: boolean\r\n  login: string | null\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n  setAuthUserData: (id: number | null, email: string | null, login: string | null) => void\r\n}\r\n\r\nexport type HeaderContainerType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType> {\r\n\r\n  componentDidMount() {\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n      withCredentials: true,\r\n      headers: {\r\n        \"api-key\": \"70d80796-3f72-4c1c-8a51-937b510017ff\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n          let {id, email, login} = response.data.data;\r\n          this.props.setAuthUserData(id, email, login,);\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Header {...this.props}/>\r\n    )\r\n  }\r\n}\r\n\r\nconst MapStateToProps = (state: RootStateType): MapStateToPropsType => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(MapStateToProps, {setAuthUserData: setAuthUserData})(HeaderContainer);","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\api\\api.ts",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":9},{"ruleId":"155","severity":1,"message":"156","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":9},{"ruleId":"155","severity":1,"message":"156","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":9},{"ruleId":"159","severity":1,"message":"160","line":22,"column":9,"nodeType":"161","endLine":22,"endColumn":49},{"ruleId":"155","severity":1,"message":"162","line":4,"column":9,"nodeType":"157","messageId":"158","endLine":4,"endColumn":11},{"ruleId":"155","severity":1,"message":"163","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":13},{"ruleId":"155","severity":1,"message":"163","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":13},{"ruleId":"155","severity":1,"message":"164","line":1,"column":16,"nodeType":"157","messageId":"158","endLine":1,"endColumn":24},{"ruleId":"155","severity":1,"message":"165","line":12,"column":9,"nodeType":"157","messageId":"158","endLine":12,"endColumn":17},{"ruleId":"155","severity":1,"message":"166","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":13},{"ruleId":"155","severity":1,"message":"165","line":7,"column":9,"nodeType":"157","messageId":"158","endLine":7,"endColumn":17},{"ruleId":"159","severity":1,"message":"160","line":44,"column":15,"nodeType":"161","endLine":44,"endColumn":105},{"ruleId":"159","severity":1,"message":"160","line":9,"column":6,"nodeType":"161","endLine":9,"endColumn":29},{"ruleId":"155","severity":1,"message":"166","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":13},{"ruleId":"155","severity":1,"message":"167","line":2,"column":9,"nodeType":"157","messageId":"158","endLine":2,"endColumn":22},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"@typescript-eslint/no-unused-vars","'s' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'v1' is defined but never used.","'React' is defined but never used.","'Dispatch' is defined but never used.","'usersAPI' is defined but never used.","'axios' is defined but never used.","'AuthStateType' is defined but never used.","no-global-assign","no-unsafe-negation"]