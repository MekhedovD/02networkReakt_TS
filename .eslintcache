[{"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\index.tsx":"1","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\App.tsx":"3","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Navbar\\Navbar.tsx":"4","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\Profile.tsx":"5","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Header\\Header.tsx":"6","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Dialogs.tsx":"7","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\News\\News.tsx":"8","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Settings\\Settings.tsx":"9","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Music\\Music.tsx":"10","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPost.tsx":"11","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\Post\\Post.tsx":"13","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogItem\\DialogItem.tsx":"14","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Message\\Message.tsx":"15","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\Redax\\State.ts":"16","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\Redax\\profile-reducer.ts":"17","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\Redax\\dialogs-reducer.ts":"18","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\Redax\\sidebar-reducer.ts":"19"},{"size":521,"mtime":1611332546255,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1607097706521,"results":"22","hashOfConfig":"21"},{"size":1541,"mtime":1611332764121,"results":"23","hashOfConfig":"21"},{"size":850,"mtime":1611156889392,"results":"24","hashOfConfig":"21"},{"size":618,"mtime":1611155522921,"results":"25","hashOfConfig":"21"},{"size":316,"mtime":1607703233751,"results":"26","hashOfConfig":"21"},{"size":1538,"mtime":1611674454695,"results":"27","hashOfConfig":"21"},{"size":164,"mtime":1607957992948,"results":"28","hashOfConfig":"21"},{"size":180,"mtime":1607957992857,"results":"29","hashOfConfig":"21"},{"size":168,"mtime":1607957993024,"results":"30","hashOfConfig":"21"},{"size":1217,"mtime":1611677628098,"results":"31","hashOfConfig":"21"},{"size":343,"mtime":1608398103841,"results":"32","hashOfConfig":"21"},{"size":499,"mtime":1608490381741,"results":"33","hashOfConfig":"21"},{"size":461,"mtime":1608480593555,"results":"34","hashOfConfig":"21"},{"size":344,"mtime":1608480765805,"results":"35","hashOfConfig":"21"},{"size":2413,"mtime":1611670775581,"results":"36","hashOfConfig":"21"},{"size":1178,"mtime":1611677230117,"results":"37","hashOfConfig":"21"},{"size":1254,"mtime":1611677225977,"results":"38","hashOfConfig":"21"},{"size":112,"mtime":1611667877319,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"6vyjqc",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\index.tsx",[],["86","87"],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\App.tsx",["88"],"import React from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./component/Header/Header\";\r\nimport Navbar from \"./component/Navbar/Navbar\";\r\nimport Profile from \"./component/Profile/Profile\";\r\nimport Dialogs from \"./component/Dialogs/Dialogs\";\r\nimport {Route} from \"react-router-dom\";\r\nimport News from \"./component/News/News\";\r\nimport Settings from \"./component/Settings/Settings\";\r\nimport Music from \"./component/Music/Music\";\r\nimport store, {ActionsTypes, StoreType} from \"./Redax/State\";\r\n\r\ntype PropsType = {\r\n  store: StoreType\r\n  dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\nconst App: React.FC<PropsType> = (props) => {\r\n  const state = props.store.getState();\r\n\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <Header/>\r\n      <Navbar/>\r\n      <div className=\"app-wrapper-content\">\r\n        <Route path=\"/dialogs\" render={() =><Dialogs\r\n          dialogs={state.dialogsPage.dialogs}\r\n          messages={state.dialogsPage.messages}\r\n          message={state.dialogsPage.newMessageBody}\r\n          dispatch={props.store.dispatch.bind(props.store)}\r\n        />}/>\r\n        <Route path=\"/profile\" render={() => <Profile\r\n          posts={state.profilePage.posts}\r\n          dispatch={props.store.dispatch.bind(props.store)}\r\n          message={state.profilePage.newPostText}\r\n        />}/>\r\n        <Route path=\"/news\" render={() => <News/>}/>\r\n        <Route path=\"/music\" render={() => <Music/>}/>\r\n        <Route path=\"/settings\" render={() => <Settings/>}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Navbar\\Navbar.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\Profile.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Header\\Header.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Dialogs.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\News\\News.tsx",["89"],"import React from \"react\";\r\nimport s from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n  return (\r\n    <div>\r\n      News\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Settings\\Settings.tsx",["90"],"import React from \"react\";\r\nimport s from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <div>\r\n      Settings\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Music\\Music.tsx",["91"],"import React from \"react\";\r\nimport s from \"./Musik.module.css\"\r\n\r\nconst Music = () => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPost.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\Post\\Post.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogItem\\DialogItem.tsx",["92"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"../Dialogs.module.css\"\r\nimport {v1} from \"uuid\";\r\n\r\ntype DialogsItemType = {\r\n  name: string\r\n  _id: string\r\n}\r\n\r\nconst DialogItem = (props: DialogsItemType) => {\r\n  let path = \"/dialogs/\" + props._id;\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Message\\Message.tsx",["93","94"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"../Dialogs.module.css\"\r\nimport {v1} from \"uuid\";\r\n\r\ntype  MessageType = {\r\n  message: string\r\n  _id: string\r\n}\r\n\r\nconst Message = (props: MessageType) => {\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message;\r\n","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\Redax\\State.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\Redax\\profile-reducer.ts",["95"],"import {v1} from \"uuid\";\r\nimport {ActionsTypes, RootStateType} from \"./State\";\r\n// import {PostType} from \"./State\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst CHANGE_NEW_TEXT = \"CHANGE-NEW-TEXT\";\r\n\r\nexport type ProfileActionsTypes =\r\n\tReturnType<typeof addPostAC> |\r\n\tReturnType<typeof changeNewTextAC>\r\n\r\nexport type PostType = {\r\n\tmessage: string\r\n\tlikeCount: number\r\n\tid: string\r\n}\r\nexport type ProfilePageType = {\r\n\tposts: Array<PostType>\r\n\tnewPostText: string\r\n}\r\n\r\nconst profileReducer = (state: ProfilePageType, action: ActionsTypes) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST:\r\n\t\t\tconst newPost: PostType = {\r\n\t\t\t\tid: v1(),\r\n\t\t\t\tmessage: action.postMessage,\r\n\t\t\t\tlikeCount: 0\r\n\t\t\t}\r\n\t\t\tstate.posts.push(newPost);\r\n\t\t\tstate.newPostText = \"\";\r\n\t\t\treturn state;\r\n\t\tcase  CHANGE_NEW_TEXT:\r\n\t\t\tstate.newPostText = action.newText;\r\n\t\t\treturn state;\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const addPostAC = (postMessage: string) => {\r\n\treturn {\r\n\t\ttype: ADD_POST,\r\n\t\tpostMessage: postMessage\r\n\t} as const\r\n}\r\nexport const changeNewTextAC = (newText: string) => {\r\n\treturn {\r\n\t\ttype: CHANGE_NEW_TEXT,\r\n\t\tnewText: newText\r\n\t} as const\r\n}\r\n\r\nexport default profileReducer;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\Redax\\dialogs-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\Redax\\sidebar-reducer.ts",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":11,"column":8,"nodeType":"102","messageId":"103","endLine":11,"endColumn":13},{"ruleId":"100","severity":1,"message":"104","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":9},{"ruleId":"100","severity":1,"message":"104","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":9},{"ruleId":"100","severity":1,"message":"104","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":9},{"ruleId":"100","severity":1,"message":"105","line":4,"column":9,"nodeType":"102","messageId":"103","endLine":4,"endColumn":11},{"ruleId":"100","severity":1,"message":"106","line":2,"column":9,"nodeType":"102","messageId":"103","endLine":2,"endColumn":16},{"ruleId":"100","severity":1,"message":"105","line":4,"column":9,"nodeType":"102","messageId":"103","endLine":4,"endColumn":11},{"ruleId":"100","severity":1,"message":"107","line":2,"column":23,"nodeType":"102","messageId":"103","endLine":2,"endColumn":36},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","'s' is defined but never used.","'v1' is defined but never used.","'NavLink' is defined but never used.","'RootStateType' is defined but never used.","no-global-assign","no-unsafe-negation"]