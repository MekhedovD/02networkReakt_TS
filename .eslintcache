[{"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\index.tsx":"1","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\App.tsx":"3","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Navbar\\Navbar.tsx":"4","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\Profile.tsx":"5","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Header\\Header.tsx":"6","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Dialogs.tsx":"7","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\News\\News.tsx":"8","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Settings\\Settings.tsx":"9","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Music\\Music.tsx":"10","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPost.tsx":"11","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\Post\\Post.tsx":"13","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogItem\\DialogItem.tsx":"14","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Message\\Message.tsx":"15","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\store.ts":"16","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\profile-reducer.ts":"17","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\dialogs-reducer.ts":"18","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\sidebar-reducer.ts":"19","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\redux-store.ts":"20","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPostContainer.tsx":"21","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogsContainer.tsx":"22","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\users-reducer.ts":"23","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Users\\UsersContainer.tsx":"24","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Users\\Users.tsx":"25","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\common\\Preolader\\Preolader.tsx":"26","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileContainer.tsx":"27","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\auth-reducer.ts":"28","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Header\\HeaderContainer.tsx":"29","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\api\\api.ts":"30","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Login\\Login.tsx":"31","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\hoc\\withAuthRedirect.tsx":"32","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileInfo\\ProfileStatus.tsx":"33","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\utils\\Validators.ts":"34","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\common\\FormsControls\\FormsControls.tsx":"35","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\AddNewPostForm\\AddNewPostForm.tsx":"36","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\AddMessageForm\\AddMessageForm.tsx":"37","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\app-reducer.ts":"38","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\users-selector.ts":"39","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"40"},{"size":1019,"mtime":1623352152602,"results":"41","hashOfConfig":"42"},{"size":425,"mtime":1607097706521,"results":"43","hashOfConfig":"42"},{"size":2143,"mtime":1623181362208,"results":"44","hashOfConfig":"42"},{"size":973,"mtime":1615663247576,"results":"45","hashOfConfig":"42"},{"size":647,"mtime":1626018190926,"results":"46","hashOfConfig":"42"},{"size":666,"mtime":1622317682721,"results":"47","hashOfConfig":"42"},{"size":1329,"mtime":1622390736410,"results":"48","hashOfConfig":"42"},{"size":164,"mtime":1607957992948,"results":"49","hashOfConfig":"42"},{"size":180,"mtime":1607957992857,"results":"50","hashOfConfig":"42"},{"size":168,"mtime":1607957993024,"results":"51","hashOfConfig":"42"},{"size":900,"mtime":1626019926890,"results":"52","hashOfConfig":"42"},{"size":1123,"mtime":1624379848517,"results":"53","hashOfConfig":"42"},{"size":499,"mtime":1622143065617,"results":"54","hashOfConfig":"42"},{"size":461,"mtime":1608480593555,"results":"55","hashOfConfig":"42"},{"size":350,"mtime":1616776237785,"results":"56","hashOfConfig":"42"},{"size":2427,"mtime":1611939312650,"results":"57","hashOfConfig":"58"},{"size":2928,"mtime":1622146515874,"results":"59","hashOfConfig":"42"},{"size":1306,"mtime":1622141279237,"results":"60","hashOfConfig":"42"},{"size":149,"mtime":1611936068881,"results":"61","hashOfConfig":"42"},{"size":929,"mtime":1623180426466,"results":"62","hashOfConfig":"42"},{"size":863,"mtime":1622146515776,"results":"63","hashOfConfig":"42"},{"size":1072,"mtime":1622141279368,"results":"64","hashOfConfig":"42"},{"size":4977,"mtime":1623346912764,"results":"65","hashOfConfig":"42"},{"size":3649,"mtime":1623353240270,"results":"66","hashOfConfig":"42"},{"size":2129,"mtime":1622318445345,"results":"67","hashOfConfig":"42"},{"size":260,"mtime":1616959580766,"results":"68","hashOfConfig":"42"},{"size":2016,"mtime":1623353327721,"results":"69","hashOfConfig":"42"},{"size":1991,"mtime":1623179326732,"results":"70","hashOfConfig":"42"},{"size":902,"mtime":1623177091996,"results":"71","hashOfConfig":"42"},{"size":1369,"mtime":1622312577828,"results":"72","hashOfConfig":"42"},{"size":2225,"mtime":1622563716148,"results":"73","hashOfConfig":"42"},{"size":762,"mtime":1619725283273,"results":"74","hashOfConfig":"42"},{"size":1638,"mtime":1620319445673,"results":"75","hashOfConfig":"42"},{"size":292,"mtime":1622219866725,"results":"76","hashOfConfig":"42"},{"size":687,"mtime":1622303601401,"results":"77","hashOfConfig":"42"},{"size":957,"mtime":1622304486186,"results":"78","hashOfConfig":"42"},{"size":866,"mtime":1622304486006,"results":"79","hashOfConfig":"42"},{"size":965,"mtime":1623179891149,"results":"80","hashOfConfig":"42"},{"size":920,"mtime":1623353145075,"results":"81","hashOfConfig":"42"},{"size":1179,"mtime":1624385228853,"results":"82","hashOfConfig":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"bw5uux",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"85"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"85"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"85"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"85"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6vyjqc",{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"85"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"85"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"85"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"85"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"85"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"85"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\index.tsx",[],["177","178"],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\App.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Navbar\\Navbar.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\Profile.tsx",["179"],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Header\\Header.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Dialogs.tsx",["180"],"import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogType, MessageType} from \"../../redux/dialogs-reducer\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport type DialogsPropsType = {\r\n  dialogs: Array<DialogType>\r\n  messages: Array<MessageType>\r\n  onSendMessageClick: (messageText: string) => void\r\n  isAuth: boolean\r\n}\r\n\r\nexport type MessageFormDataType = {\r\n  messageText: string\r\n}\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n  let dialogsElement = props.dialogs.map(d => <DialogItem name={d.name} _id={d.id} key={d.id}/>)\r\n  let messagesElement = props.messages.map(m => <Message message={m.message} _id={m.id} key={m.id}/>)\r\n\r\n  // if (!props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n  const addNewMessage = (data: MessageFormDataType) => {\r\n    props.onSendMessageClick(data.messageText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogItems}>\r\n        { dialogsElement }\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElement}</div>\r\n\r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\News\\News.tsx",["181"],"import React from \"react\";\r\nimport s from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n  return (\r\n    <div>\r\n      News\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Settings\\Settings.tsx",["182"],"import React from \"react\";\r\nimport s from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <div>\r\n      Settings\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Music\\Music.tsx",["183"],"import React from \"react\";\r\nimport s from \"./Musik.module.css\"\r\n\r\nconst Music = () => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPost.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileInfo\\ProfileInfo.tsx",["184"],"import React from \"react\";\r\nimport { UserProfileType } from \"../../../redux/profile-reducer\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preolader/Preolader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\ntype ProfileInfoType = {\r\n  profile: UserProfileType | null\r\n  status: string\r\n  updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoType) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/*<div>*/}\r\n      {/*  <img src=\"https://tinypng.com/images/social/website.jpg\" alt=\"\"/>*/}\r\n      {/*</div>*/}\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.large} alt=\"profile\" />\r\n\r\n        <ProfileStatusWithHooks status={props.status}\r\n                       updateStatus={props.updateStatus}\r\n        />\r\n\r\n        {/*<ProfileStatus status={props.status}*/}\r\n        {/*               updateStatus={props.updateStatus}*/}\r\n        {/*/>*/}\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\Post\\Post.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogItem\\DialogItem.tsx",["185"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"../Dialogs.module.css\"\r\nimport {v1} from \"uuid\";\r\n\r\ntype DialogsItemType = {\r\n  name: string\r\n  _id: string\r\n}\r\n\r\nconst DialogItem = (props: DialogsItemType) => {\r\n  let path = \"/dialogs/\" + props._id;\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Message\\Message.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\store.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\profile-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\dialogs-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\sidebar-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\redux-store.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPostContainer.tsx",["186"],"import React, {Dispatch} from \"react\";\r\nimport {addPostAC, PostType} from \"../../../redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../../redux/redux-store\";\r\nimport {Action} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n  posts: Array<PostType>\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n  addPost: (newPostText: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  }\r\n};\r\n\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<Action<string>>): MapDispatchToPropsType => {\r\n  return {\r\n    addPost: (newPostText: string) => {\r\n      dispatch(addPostAC(newPostText))\r\n    }\r\n  }\r\n};\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps) (MyPost)\r\n\r\nexport default MyPostContainer;\r\n","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogsContainer.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\users-reducer.ts",["187"],"import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"react\";\r\nimport store from \"./redux-store\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst FAKE = \"FAKE\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_LOADING = \"TOGGLE_IS_LOADING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nexport type UsersActionsTypes =\r\n  ReturnType<typeof followSuccess> |\r\n  ReturnType<typeof fake> |\r\n  ReturnType<typeof unfollowSuccess> |\r\n  ReturnType<typeof setUsers> |\r\n  ReturnType<typeof setCurrentPage> |\r\n  ReturnType<typeof setTotalUsersCount> |\r\n  ReturnType<typeof toggleIsLoading> |\r\n  ReturnType<typeof toggleFollowingProgress>\r\n\r\nexport type UsersType = {\r\n  name: string\r\n  id: number\r\n  uniqueUrlName: null\r\n  photos: {\r\n    small: string | null\r\n    large: string | null\r\n  }\r\n  status: null\r\n  followed: boolean\r\n}\r\n\r\ntype InitialStateType = {\r\n  users: Array<UsersType>\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  isLoading: boolean\r\n  followingInProgress: Array<number>\r\n  fake: number\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isLoading: true,\r\n  followingInProgress: [],\r\n  fake: 10\r\n};\r\n\r\n//Reducer\r\nconst usersReducer = (state: InitialStateType = initialState, action: UsersActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case FAKE: return {...state, fake: state.fake + 1}\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: true}\r\n          }\r\n          return u;\r\n        })\r\n      }\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: false}\r\n          }\r\n          return u;\r\n        })\r\n      }\r\n\r\n    case SET_USERS: {\r\n      return {...state, users: action.users}\r\n    }\r\n\r\n    case SET_CURRENT_PAGE: {\r\n      return {...state, currentPage: action.currentPage}\r\n    }\r\n\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return {...state, totalUsersCount: action.totalCount}\r\n    }\r\n\r\n    case TOGGLE_IS_LOADING: {\r\n      return {...state, isLoading: action.isLoading}\r\n    }\r\n\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {...state,\r\n        followingInProgress: action.isLoading\r\n          ? [...state.followingInProgress, action.userId]\r\n          : [...state.followingInProgress.filter(id => id !== action.userId)]}\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\n// ActionCreator\r\nexport const  followSuccess = (userId: number) => {\r\n  return {\r\n    type: FOLLOW,\r\n    userId\r\n  } as const\r\n}\r\n\r\nexport const fake = () => {\r\n  return {\r\n    type: FAKE,\r\n  } as const\r\n}\r\n\r\nexport const unfollowSuccess = (userId: number) => {\r\n  return {\r\n    type: UNFOLLOW,\r\n    userId\r\n  } as const\r\n}\r\n\r\nexport const setUsers = (users: Array<UsersType>) => {\r\n  return {\r\n    type: SET_USERS,\r\n    users\r\n  } as const\r\n}\r\n\r\nexport const setCurrentPage = (currentPage: number) => {\r\n  return {\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n  } as const\r\n}\r\n\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n  return {\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalCount: totalCount\r\n  } as const\r\n}\r\n\r\nexport const toggleIsLoading = (isLoading: boolean) => {\r\n  return {\r\n    type: TOGGLE_IS_LOADING,\r\n    isLoading\r\n  } as const\r\n}\r\n\r\nexport const toggleFollowingProgress = (isLoading: boolean, userId: number) => {\r\n  return {\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isLoading,\r\n    userId\r\n  } as const\r\n}\r\n\r\n// thunk\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(toggleIsLoading(true));\r\n    // dispatch(setCurrentPage(page));\r\n    usersAPI.getUsers(page, pageSize)\r\n      .then(data => {\r\n        dispatch(toggleIsLoading(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n      })\r\n  }\r\n};\r\n\r\nexport const follow = (userId: number) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    usersAPI.follow(userId)\r\n      .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n          dispatch(followSuccess(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n      })\r\n  }\r\n};\r\n\r\nexport const unfollow = (userId: number) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    usersAPI.follow(userId)\r\n      .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n          dispatch(unfollowSuccess(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n      })\r\n  }\r\n};\r\n\r\nexport default usersReducer;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Users\\UsersContainer.tsx",["188","189"],"import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport store, {RootStateType} from \"../../redux/redux-store\";\r\nimport {\r\n  followSuccess,\r\n  setCurrentPage, toggleFollowingProgress,\r\n  unfollowSuccess,\r\n  UsersType, requestUsers,\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preolader/Preolader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getCurrentPage, getFollowingInProgress, getIsLoading,\r\n  getPageSize, getTotalCount,\r\n  getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selector\";\r\n\r\ntype MapStateToProps = {\r\n  users: Array<UsersType>\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  totalCount: number\r\n  isLoading: boolean\r\n  followingInProgress: Array<number>\r\n}\r\n\r\ntype UsersPropsType = {\r\n  users: Array<UsersType>\r\n  unfollowSuccess: (id: number) => void//\r\n  followSuccess: (id: number) => void\r\n  setCurrentPage: (currentPage: number) => void\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  currentPage: number\r\n  isLoading: boolean\r\n  followingInProgress: Array<number>\r\n  getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber: number) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize); //тут запрос за новыми юзерами\r\n    this.props.setCurrentPage(pageNumber) //тут  мы устанавливаем новую страничку активной\r\n  }\r\n\r\n  render() {\r\n    console.log(\"ESERS\")\r\n    return <>\r\n      { this.props.isLoading ? <Preloader /> : null }\r\n      <Users totalUsersCount={this.props.totalUsersCount}\r\n             pageSize={this.props.pageSize}\r\n             currentPage={this.props.currentPage}\r\n             users={this.props.users}\r\n             onPageChanged={this.onPageChanged}\r\n             unfollow={this.props.unfollowSuccess}//\r\n             follow={this.props.followSuccess}\r\n             followingInProgress={this.props.followingInProgress}\r\n      />\r\n    </>\r\n  }\r\n}\r\n\r\n// let mapStateToProps = (state: RootStateType): MapStateToProps => {\r\n//   return {\r\n//     users: state.usersPage.users,\r\n//     pageSize: state.usersPage.pageSize,\r\n//     totalUsersCount: state.usersPage.totalUsersCount,\r\n//     currentPage: state.usersPage.currentPage,\r\n//     totalCount: state.usersPage.totalUsersCount,\r\n//     isLoading: state.usersPage.isLoading,\r\n//     followingInProgress: state.usersPage.followingInProgress\r\n//   }\r\n// }\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStateToProps => {\r\n  console.log(\"mapStateTP USERSD\")\r\n\r\n  return {\r\n    users: getUsers(state),\r\n    // users: getUsersSuperSelector(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    totalCount: getTotalCount(state),\r\n    isLoading: getIsLoading(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, {\r\n    followSuccess,\r\n    unfollowSuccess,\r\n    setCurrentPage, //вот этот актион надо вызвать когда меняешь страничку\r\n    toggleFollowingProgress,\r\n    getUsers: requestUsers\r\n  }),\r\n  // withAuthRedirect,// да 'то защита? что,ы не авторизованный .зер не смог попасть на 'ту страничку\r\n)(UsersContainer)\r\n\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Users\\Users.tsx",["190"],"import s from \"./User.module.css\";\r\nimport UsersPhoto from \"../../assets/images/img.ava.png\";\r\nimport React from \"react\";\r\nimport {UsersType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type UsersPropsType = {\r\n  users: Array<UsersType>\r\n  unfollow: (id: number) => void\r\n  follow: (id: number) => void\r\n  onPageChanged: (p: number) => void\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  currentPage: number\r\n  // toggleFollowingProgress: (isLoading: boolean, userId: number) => void\r\n  followingInProgress: Array<number>\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n  let pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pageCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div>\r\n        {pages.map(p => {\r\n          return <span onClick={(e) => props.onPageChanged(p)}\r\n                       className={p === props.currentPage ? s.selectedPage : \"\"}>| {p} |</span>\r\n        })}\r\n      </div>\r\n\r\n      {props.users.map(u => <div key={u.id}>\r\n        <span>\r\n          <div>\r\n            <NavLink to={\"/profile/\" + u.id}>\r\n              <img src={u.photos.small !== null ? u.photos.small : UsersPhoto} className={s.userPhoto}/>\r\n            </NavLink>\r\n          </div>\r\n          <div>\r\n            {u.followed\r\n              ? <button disabled={props.followingInProgress\r\n                .some(id => id === u.id)}\r\n                        onClick={() => {props.unfollow(u.id)}}>Unfollow</button>\r\n\r\n              : <button disabled={props.followingInProgress\r\n                .some(id => id === u.id)}\r\n                        onClick={() => {props.follow(u.id)} }>Follow</button>}\r\n          </div>\r\n                </span>\r\n                <span>\r\n                <span>\r\n                <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n                </span>\r\n                <span>\r\n                <div>{\"u.location.country\"}</div>\r\n                <div>{\"u.location.city\"}</div>\r\n          </span>\r\n        </span>\r\n      </div>)}\r\n    </div>\r\n  )\r\n}\r\nexport default Users;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\common\\Preolader\\Preolader.tsx",["191"],"import preloader from \"../../../assets/images/preolader.svg\";\r\nimport React from \"react\";\r\n\r\ntype PreloaderType = {}\r\n\r\nlet Preloader: React.FC<PreloaderType> = () => {\r\n return (\r\n   <>\r\n     <img src={preloader} />\r\n   </>\r\n )\r\n}\r\n\r\nexport default Preloader;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileContainer.tsx",["192"],"import React from \"react\";\r\nimport {getStatus, getUserProfile, updateStatus, UserProfileType} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"./../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n  profile: UserProfileType | null\r\n  status: string //\r\n  authorized: any\r\n  isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n  getUserProfile: (userId: string) => void\r\n  getStatus: (userId: string) => void\r\n  updateStatus: (status: string) => void\r\n}\r\n\r\ntype UserProfilePropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype PatchParamsType = {\r\n  userId: string\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PatchParamsType> & UserProfilePropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorized;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props}\r\n                 profile={this.props.profile}\r\n                 status={this.props.status}\r\n                 updateStatus={this.props.updateStatus}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n  // console.log(\"mapStateTP Profile\")\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorized: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus}),\r\n  withRouter,\r\n  // withAuthRedirect,\r\n)(ProfileContainer)\r\n","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\auth-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Header\\HeaderContainer.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\api\\api.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Login\\Login.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\hoc\\withAuthRedirect.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],["193","194"],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\utils\\Validators.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\common\\FormsControls\\FormsControls.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\AddNewPostForm\\AddNewPostForm.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\AddMessageForm\\AddMessageForm.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\app-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\users-selector.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":13},{"ruleId":"199","severity":1,"message":"203","line":7,"column":9,"nodeType":"201","messageId":"202","endLine":7,"endColumn":17},{"ruleId":"199","severity":1,"message":"204","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":9},{"ruleId":"199","severity":1,"message":"204","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":9},{"ruleId":"199","severity":1,"message":"204","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":9},{"ruleId":"199","severity":1,"message":"205","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":21},{"ruleId":"199","severity":1,"message":"206","line":4,"column":9,"nodeType":"201","messageId":"202","endLine":4,"endColumn":11},{"ruleId":"199","severity":1,"message":"207","line":1,"column":8,"nodeType":"201","messageId":"202","endLine":1,"endColumn":13},{"ruleId":"199","severity":1,"message":"208","line":3,"column":8,"nodeType":"201","messageId":"202","endLine":3,"endColumn":13},{"ruleId":"199","severity":1,"message":"208","line":3,"column":8,"nodeType":"201","messageId":"202","endLine":3,"endColumn":13},{"ruleId":"199","severity":1,"message":"209","line":12,"column":9,"nodeType":"201","messageId":"202","endLine":12,"endColumn":25},{"ruleId":"210","severity":1,"message":"211","line":42,"column":15,"nodeType":"212","endLine":42,"endColumn":105},{"ruleId":"210","severity":1,"message":"211","line":9,"column":6,"nodeType":"212","endLine":9,"endColumn":29},{"ruleId":"199","severity":1,"message":"209","line":7,"column":9,"nodeType":"201","messageId":"202","endLine":7,"endColumn":25},{"ruleId":"195","replacedBy":"213"},{"ruleId":"197","replacedBy":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"@typescript-eslint/no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'s' is defined but never used.","'ProfileStatus' is defined but never used.","'v1' is defined but never used.","'React' is defined but never used.","'store' is defined but never used.","'withAuthRedirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["215"],["216"],"no-global-assign","no-unsafe-negation"]