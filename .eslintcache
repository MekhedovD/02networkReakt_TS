[{"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\index.tsx":"1","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\App.tsx":"3","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Navbar\\Navbar.tsx":"4","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\Profile.tsx":"5","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Header\\Header.tsx":"6","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Dialogs.tsx":"7","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\News\\News.tsx":"8","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Settings\\Settings.tsx":"9","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Music\\Music.tsx":"10","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPost.tsx":"11","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\Post\\Post.tsx":"13","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogItem\\DialogItem.tsx":"14","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Message\\Message.tsx":"15","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\store.ts":"16","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\profile-reducer.ts":"17","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\dialogs-reducer.ts":"18","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\sidebar-reducer.ts":"19","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\redux-store.ts":"20","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPostContainer.tsx":"21","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogsContainer.tsx":"22"},{"size":853,"mtime":1613148700417,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1607097706521,"results":"25","hashOfConfig":"24"},{"size":2205,"mtime":1613147480812,"results":"26","hashOfConfig":"24"},{"size":850,"mtime":1611156889392,"results":"27","hashOfConfig":"24"},{"size":750,"mtime":1613146732115,"results":"28","hashOfConfig":"24"},{"size":316,"mtime":1607703233751,"results":"29","hashOfConfig":"24"},{"size":1933,"mtime":1613148700885,"results":"30","hashOfConfig":"24"},{"size":164,"mtime":1607957992948,"results":"31","hashOfConfig":"24"},{"size":180,"mtime":1607957992857,"results":"32","hashOfConfig":"24"},{"size":168,"mtime":1607957993024,"results":"33","hashOfConfig":"24"},{"size":1260,"mtime":1613144503122,"results":"34","hashOfConfig":"24"},{"size":343,"mtime":1608398103841,"results":"35","hashOfConfig":"24"},{"size":499,"mtime":1608490381741,"results":"36","hashOfConfig":"24"},{"size":461,"mtime":1608480593555,"results":"37","hashOfConfig":"24"},{"size":344,"mtime":1608480765805,"results":"38","hashOfConfig":"24"},{"size":2427,"mtime":1611939312650,"results":"39","hashOfConfig":"24"},{"size":1534,"mtime":1612961175829,"results":"40","hashOfConfig":"24"},{"size":1625,"mtime":1613145818343,"results":"41","hashOfConfig":"24"},{"size":149,"mtime":1611936068881,"results":"42","hashOfConfig":"24"},{"size":1344,"mtime":1612024126600,"results":"43","hashOfConfig":"24"},{"size":1593,"mtime":1613147172005,"results":"44","hashOfConfig":"24"},{"size":1925,"mtime":1613148702675,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6vyjqc",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\index.tsx",["102"],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\reportWebVitals.ts",[],["103","104"],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\App.tsx",["105"],"import React from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./component/Header/Header\";\r\nimport Navbar from \"./component/Navbar/Navbar\";\r\nimport Profile from \"./component/Profile/Profile\";\r\nimport Dialogs from \"./component/Dialogs/Dialogs\";\r\nimport {Route} from \"react-router-dom\";\r\nimport News from \"./component/News/News\";\r\nimport Settings from \"./component/Settings/Settings\";\r\nimport Music from \"./component/Music/Music\";\r\nimport {ActionsTypes, ReduxStoreType} from \"./redux/redux-store\";\r\nimport DialogsContainer from \"./component/Dialogs/DialogsContainer\";\r\n\r\ntype PropsType = {\r\n  store: ReduxStoreType //\r\n  dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\nconst App: React.FC<PropsType> = (props) => {\r\n  // const state = props.store.getState();\r\n\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <Header/>\r\n      <Navbar/>\r\n      <div className=\"app-wrapper-content\">\r\n        <Route path=\"/dialogs\" render={() =><DialogsContainer store={props.store}\r\n        />}/>\r\n        {/*<Route path=\"/dialogs\" render={() =><DialogsContainer*/}\r\n        {/*  dialogs={state.dialogsPage.dialogs}*/}\r\n        {/*  messages={state.dialogsPage.messages}*/}\r\n        {/*  message={state.dialogsPage.newMessageBody}*/}\r\n        {/*  dispatch={props.store.dispatch.bind(props.store)}*/}\r\n        {/*/>}/>*/}\r\n        {/*<Route path=\"/dialogs\" render={() =><Dialogs*/}\r\n        {/*  dialogs={state.dialogsPage.dialogs}*/}\r\n        {/*  messages={state.dialogsPage.messages}*/}\r\n        {/*  message={state.dialogsPage.newMessageBody}*/}\r\n        {/*  dispatch={props.store.dispatch.bind(props.store)}*/}\r\n        {/*/>}/>*/}\r\n        <Route path=\"/profile\" render={() => <Profile store={props.store}\r\n        />}/>\r\n        {/*<Route path=\"/profile\" render={() => <Profile*/}\r\n        {/*  posts={state.profilePage.posts}*/}\r\n        {/*  dispatch={props.store.dispatch.bind(props.store)}*/}\r\n        {/*  message={state.profilePage.newPostText}*/}\r\n        {/*/>}/>*/}\r\n        <Route path=\"/news\" render={() => <News/>}/>\r\n        <Route path=\"/music\" render={() => <Music/>}/>\r\n        <Route path=\"/settings\" render={() => <Settings/>}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Navbar\\Navbar.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\Profile.tsx",["106","107","108","109"],"import React from \"react\";\r\nimport MyPost from \"./MyPost/MyPost\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport store, {ActionsTypes, PostType, ReduxStoreType} from \"../../redux/redux-store\";\r\nimport MyPostContainer from \"./MyPost/MyPostContainer\";\r\n\r\nexport type ProfilePropsType  = {\r\n  // message: string\r\n  // posts: Array<PostType>\r\n  // dispatch: (action: ActionsTypes) => void\r\n  store: ReduxStoreType\r\n}\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo/>\r\n      <MyPostContainer\r\n        store={props.store}\r\n        // posts={props.posts}\r\n        // message={props.message}\r\n        // dispatch={store.dispatch.bind(store)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Header\\Header.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Dialogs.tsx",["110","111","112","113"],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\News\\News.tsx",["114"],"import React from \"react\";\r\nimport s from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n  return (\r\n    <div>\r\n      News\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Settings\\Settings.tsx",["115"],"import React from \"react\";\r\nimport s from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <div>\r\n      Settings\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Music\\Music.tsx",["116"],"import React from \"react\";\r\nimport s from \"./Musik.module.css\"\r\n\r\nconst Music = () => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPost.tsx",["117","118"],"import React, {ChangeEvent} from \"react\";\r\nimport s from \"./MyPost.module.css\";\r\nimport {addPostAC, changeNewTextAC, PostType} from \"../../../redux/profile-reducer\";\r\nimport Post from \"./Post/Post\";\r\n\r\nexport type MyPostPropsType = {\r\n  posts: Array<PostType>\r\n  message: string\r\n  addPost: () => void\r\n  onPostChange: (value: string) => void\r\n}\r\n\r\nconst MyPost = (props: MyPostPropsType) => {\r\n  let postsElement = props.posts.map(p => <Post key={p.id} message={p.message} likeCount={p.likeCount}/>);\r\n\r\n  let addPost = () => {\r\n    props.addPost()\r\n  };\r\n\r\n  let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n   // 1. Когда я начну изменять занчение ввода, то наверх я передам само значение\r\n    props.onPostChange(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div className={s.postSBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <div>\r\n          <textarea\r\n            onChange={onPostChange}\r\n            value={props.message}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button onClick={addPost}>Add post</button>\r\n        </div>\r\n      </div>\r\n      <div className={s.posts}>\r\n        {postsElement}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyPost;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\Post\\Post.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogItem\\DialogItem.tsx",["119"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"../Dialogs.module.css\"\r\nimport {v1} from \"uuid\";\r\n\r\ntype DialogsItemType = {\r\n  name: string\r\n  _id: string\r\n}\r\n\r\nconst DialogItem = (props: DialogsItemType) => {\r\n  let path = \"/dialogs/\" + props._id;\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Message\\Message.tsx",["120","121"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"../Dialogs.module.css\"\r\nimport {v1} from \"uuid\";\r\n\r\ntype  MessageType = {\r\n  message: string\r\n  _id: string\r\n}\r\n\r\nconst Message = (props: MessageType) => {\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message;\r\n","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\store.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\profile-reducer.ts",["122"],"import {v1} from \"uuid\";\r\nimport {ActionsTypes, RootStateType} from \"./store\";\r\n// import {PostType} from \"./State\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst CHANGE_NEW_TEXT = \"CHANGE-NEW-TEXT\";\r\n\r\nexport type ProfileActionsTypes =\r\n\tReturnType<typeof addPostAC> |\r\n\tReturnType<typeof changeNewTextAC>\r\n\r\nexport type PostType = {\r\n\tmessage: string\r\n\tlikeCount: number\r\n\tid: string\r\n}\r\nexport type ProfilePageType = {\r\n\tposts: Array<PostType>\r\n\tnewPostText: string\r\n}\r\n\r\nlet initialState = {\r\n\tposts: [\r\n\t\t{message: \"Hello! How are you\", likeCount: 5, id: v1()},\r\n\t\t{message: \"It's my first post\", likeCount: 2, id: v1()},\r\n\t],\r\n\tnewPostText: \"\"\r\n};\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: ActionsTypes) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST:\r\n\t\t\t// я введенное соо,щение буду брать не из экшена а из стейта\r\n\t\t\tconst newPost: PostType = {\r\n\t\t\t\tid: v1(),\r\n\t\t\t\tmessage: state.newPostText,\r\n\t\t\t\tlikeCount: 0\r\n\t\t\t}\r\n\t\t\tstate.posts.push(newPost);\r\n\t\t\tstate.newPostText = \"\";\r\n\t\t\treturn state;\r\n\t\tcase  CHANGE_NEW_TEXT:\r\n\t\t\tstate.newPostText = action.newText;\r\n\t\t\treturn state;\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n// соответсвенно здесь мне принимать ничего не нужно\r\nexport const addPostAC = () => {\r\n\treturn {\r\n\t\ttype: ADD_POST\r\n\t} as const\r\n}\r\nexport const changeNewTextAC = (newText: string) => {\r\n\treturn {\r\n\t\ttype: CHANGE_NEW_TEXT,\r\n\t\tnewText: newText\r\n\t} as const\r\n}\r\n\r\nexport default profileReducer;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\dialogs-reducer.ts",["123"],"import {v1} from \"uuid\";\r\nimport {ActionsTypes} from \"./store\";\r\n\r\nconst CHANGE_NEW_MESSAGE_BODY = \"CHANGE_NEW_MESSAGE_BODY\";\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nexport type DialogsActionsTypes =\r\n\tReturnType<typeof changeNewMessageBodyAC> |\r\n\tReturnType<typeof sendMessageBodyAC>;\r\n\r\nexport type MessageType = {\r\n\tmessage: string\r\n\tid: string\r\n}\r\nexport type DialogType = {\r\n\tname: string\r\n\tid: string\r\n}\r\ntype DialogPageType = {\r\n\tdialogs: Array<DialogType>\r\n\tmessages: Array<MessageType>\r\n\tnewMessageBody: string\r\n}\r\n\r\nlet initialState = {\r\n\tdialogs: [\r\n\t\t{id: v1(), name: \"Dima\"},\r\n\t\t{id: v1(), name: \"Sasha\"},\r\n\t\t{id: v1(), name: \"Valera\"},\r\n\t\t{id: v1(), name: \"Vika\"},\r\n\t\t{id: v1(), name: \"Olya\"},\r\n\t\t{id: v1(), name: \"Ulya\"}\r\n\t],\r\n\tmessages: [\r\n\t\t{message: \"Hi\", id: v1()},\r\n\t\t{message: \"How are you\", id: v1()},\r\n\t\t{message: \"YO!!!\", id: v1()}\r\n\t],\r\n\tnewMessageBody: \"\"\r\n};\r\n\r\nconst dialogsReducer = (state: DialogPageType = initialState, action: DialogsActionsTypes) => { // ?\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_NEW_MESSAGE_BODY:\r\n\t\t\tstate.newMessageBody = action.newTextBody;\r\n\t\t\treturn state;\r\n\t\tcase SEND_MESSAGE:\r\n\t\t\tlet body = state.newMessageBody;\r\n\t\t\tstate.newMessageBody = \"\";\r\n\t\t\tstate.messages.push({id: v1(),message: body});\r\n\t\t\treturn state;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const changeNewMessageBodyAC = (newTextBody: string) => {\r\n\treturn {\r\n\t\ttype: CHANGE_NEW_MESSAGE_BODY,\r\n\t\tnewTextBody: newTextBody\r\n\t} as const\r\n}\r\nexport const sendMessageBodyAC = () => {\r\n\treturn {\r\n\t\ttype: SEND_MESSAGE,\r\n\t\t// sendTextBody: sendTextBody\r\n\t} as const\r\n}\r\n\r\nexport default dialogsReducer;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\sidebar-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\redux-store.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPostContainer.tsx",["124","125"],"import React from \"react\";\r\nimport {addPostAC, changeNewTextAC, PostType} from \"../../../redux/profile-reducer\";\r\nimport {ActionsTypes, ReduxStoreType} from \"../../../redux/redux-store\";\r\nimport MyPost from \"./MyPost\";\r\n\r\nexport type MyPostContainerPropsType = {\r\n  // message: string\r\n  // posts: Array<PostType>\r\n  // dispatch: (action: ActionsTypes) => void\r\n  store: ReduxStoreType\r\n}\r\n\r\nconst MyPostContainer = (props: MyPostContainerPropsType) => {\r\n\r\n  let state = props.store.getState();\r\n\r\n  let addPost = () => {\r\n    // здесь вообще по хорошему вообще не нужно ничего передавать\r\n    // не понимаю для чего ты это сделал\r\n    // и здесь теперь передавать ничего не нужно тоже\r\n    props.store.dispatch(addPostAC())\r\n  };\r\n\r\n  let onPostChange = (value: string) => {\r\n    // 2. И вот здесь я приму его и передам дальше в редьюсер\r\n    props.store.dispatch(changeNewTextAC(value));\r\n  }\r\n\r\n  // в компоненту ты дол;ен ,ыл передавать введенное значение? но его неиту\r\n  // ну;но передать\r\n  return (<MyPost\r\n    message={state.profilePage.newPostText}\r\n    // message={props.message}\r\n    posts={state.profilePage.posts}\r\n    // posts={props.posts}\r\n    addPost={addPost}\r\n    onPostChange={onPostChange}\r\n    />)\r\n}\r\n\r\nexport default MyPostContainer;\r\n\r\n// теперь все хорошо\r\n// попробуй запусти браузер и проверь","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogsContainer.tsx",["126","127","128","129","130","131","132"],{"ruleId":"133","severity":1,"message":"134","line":12,"column":20,"nodeType":"135","endLine":17,"endColumn":7},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":6,"column":8,"nodeType":"142","messageId":"143","endLine":6,"endColumn":15},{"ruleId":"140","severity":1,"message":"144","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"145","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":13},{"ruleId":"140","severity":1,"message":"146","line":4,"column":16,"nodeType":"142","messageId":"143","endLine":4,"endColumn":28},{"ruleId":"140","severity":1,"message":"147","line":4,"column":30,"nodeType":"142","messageId":"143","endLine":4,"endColumn":38},{"ruleId":"140","severity":1,"message":"146","line":6,"column":3,"nodeType":"142","messageId":"143","endLine":6,"endColumn":15},{"ruleId":"140","severity":1,"message":"148","line":8,"column":16,"nodeType":"142","messageId":"143","endLine":8,"endColumn":30},{"ruleId":"140","severity":1,"message":"149","line":10,"column":9,"nodeType":"142","messageId":"143","endLine":10,"endColumn":26},{"ruleId":"140","severity":1,"message":"150","line":10,"column":28,"nodeType":"142","messageId":"143","endLine":10,"endColumn":50},{"ruleId":"140","severity":1,"message":"151","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":9},{"ruleId":"140","severity":1,"message":"151","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":9},{"ruleId":"140","severity":1,"message":"151","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":9},{"ruleId":"140","severity":1,"message":"152","line":3,"column":9,"nodeType":"142","messageId":"143","endLine":3,"endColumn":18},{"ruleId":"140","severity":1,"message":"153","line":3,"column":20,"nodeType":"142","messageId":"143","endLine":3,"endColumn":35},{"ruleId":"140","severity":1,"message":"154","line":4,"column":9,"nodeType":"142","messageId":"143","endLine":4,"endColumn":11},{"ruleId":"140","severity":1,"message":"155","line":2,"column":9,"nodeType":"142","messageId":"143","endLine":2,"endColumn":16},{"ruleId":"140","severity":1,"message":"154","line":4,"column":9,"nodeType":"142","messageId":"143","endLine":4,"endColumn":11},{"ruleId":"140","severity":1,"message":"156","line":2,"column":23,"nodeType":"142","messageId":"143","endLine":2,"endColumn":36},{"ruleId":"140","severity":1,"message":"146","line":2,"column":9,"nodeType":"142","messageId":"143","endLine":2,"endColumn":21},{"ruleId":"140","severity":1,"message":"147","line":2,"column":37,"nodeType":"142","messageId":"143","endLine":2,"endColumn":45},{"ruleId":"140","severity":1,"message":"146","line":3,"column":9,"nodeType":"142","messageId":"143","endLine":3,"endColumn":21},{"ruleId":"140","severity":1,"message":"157","line":1,"column":16,"nodeType":"142","messageId":"143","endLine":1,"endColumn":27},{"ruleId":"140","severity":1,"message":"151","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":9},{"ruleId":"140","severity":1,"message":"158","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":18},{"ruleId":"140","severity":1,"message":"159","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":15},{"ruleId":"140","severity":1,"message":"146","line":6,"column":3,"nodeType":"142","messageId":"143","endLine":6,"endColumn":15},{"ruleId":"140","severity":1,"message":"160","line":7,"column":3,"nodeType":"142","messageId":"143","endLine":7,"endColumn":13},{"ruleId":"140","severity":1,"message":"161","line":8,"column":3,"nodeType":"142","messageId":"143","endLine":8,"endColumn":14},"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","no-native-reassign",["162"],"no-negated-in-lhs",["163"],"@typescript-eslint/no-unused-vars","'Dialogs' is defined but never used.","Identifier","unusedVar","'MyPost' is defined but never used.","'store' is defined but never used.","'ActionsTypes' is defined but never used.","'PostType' is defined but never used.","'ReduxStoreType' is defined but never used.","'sendMessageBodyAC' is defined but never used.","'changeNewMessageBodyAC' is defined but never used.","'s' is defined but never used.","'addPostAC' is defined but never used.","'changeNewTextAC' is defined but never used.","'v1' is defined but never used.","'NavLink' is defined but never used.","'RootStateType' is defined but never used.","'ChangeEvent' is defined but never used.","'DialogItem' is defined but never used.","'Message' is defined but never used.","'DialogType' is defined but never used.","'MessageType' is defined but never used.","no-global-assign","no-unsafe-negation"]