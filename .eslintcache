[{"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\index.tsx":"1","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\App.tsx":"3","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Navbar\\Navbar.tsx":"4","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\Profile.tsx":"5","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Header\\Header.tsx":"6","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Dialogs.tsx":"7","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\News\\News.tsx":"8","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Settings\\Settings.tsx":"9","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Music\\Music.tsx":"10","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPost.tsx":"11","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\Post\\Post.tsx":"13","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogItem\\DialogItem.tsx":"14","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Message\\Message.tsx":"15","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\store.ts":"16","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\profile-reducer.ts":"17","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\dialogs-reducer.ts":"18","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\sidebar-reducer.ts":"19","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\redux-store.ts":"20","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPostContainer.tsx":"21","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogsContainer.tsx":"22","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\users-reducer.ts":"23","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Users\\UsersContainer.tsx":"24","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Users\\Users.tsx":"25","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\common\\Preolader\\Preolader.tsx":"26","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileContainer.tsx":"27"},{"size":946,"mtime":1617378173790,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1607097706521,"results":"30","hashOfConfig":"29"},{"size":1142,"mtime":1617210800208,"results":"31","hashOfConfig":"29"},{"size":973,"mtime":1615663247576,"results":"32","hashOfConfig":"29"},{"size":452,"mtime":1617380525149,"results":"33","hashOfConfig":"29"},{"size":316,"mtime":1607703233751,"results":"34","hashOfConfig":"29"},{"size":1455,"mtime":1614278810568,"results":"35","hashOfConfig":"29"},{"size":164,"mtime":1607957992948,"results":"36","hashOfConfig":"29"},{"size":180,"mtime":1607957992857,"results":"37","hashOfConfig":"29"},{"size":168,"mtime":1607957993024,"results":"38","hashOfConfig":"29"},{"size":1089,"mtime":1613670095132,"results":"39","hashOfConfig":"29"},{"size":687,"mtime":1617380524543,"results":"40","hashOfConfig":"29"},{"size":499,"mtime":1608490381741,"results":"41","hashOfConfig":"29"},{"size":461,"mtime":1608480593555,"results":"42","hashOfConfig":"29"},{"size":350,"mtime":1616776237785,"results":"43","hashOfConfig":"29"},{"size":2427,"mtime":1611939312650,"results":"44","hashOfConfig":"45"},{"size":2572,"mtime":1617380529687,"results":"46","hashOfConfig":"29"},{"size":1754,"mtime":1614280634896,"results":"47","hashOfConfig":"29"},{"size":149,"mtime":1611936068881,"results":"48","hashOfConfig":"29"},{"size":652,"mtime":1617301755988,"results":"49","hashOfConfig":"29"},{"size":1033,"mtime":1614281438536,"results":"50","hashOfConfig":"29"},{"size":1203,"mtime":1614095466329,"results":"51","hashOfConfig":"29"},{"size":2791,"mtime":1617033134774,"results":"52","hashOfConfig":"29"},{"size":3874,"mtime":1617128619363,"results":"53","hashOfConfig":"29"},{"size":1636,"mtime":1617207530528,"results":"54","hashOfConfig":"29"},{"size":260,"mtime":1616959580766,"results":"55","hashOfConfig":"29"},{"size":1361,"mtime":1617380525199,"results":"56","hashOfConfig":"29"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sxixod",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6vyjqc",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\index.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\reportWebVitals.ts",[],["122","123"],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\App.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Navbar\\Navbar.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\Profile.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Header\\Header.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Dialogs.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\News\\News.tsx",["124"],"import React from \"react\";\r\nimport s from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n  return (\r\n    <div>\r\n      News\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Settings\\Settings.tsx",["125"],"import React from \"react\";\r\nimport s from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <div>\r\n      Settings\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Music\\Music.tsx",["126"],"import React from \"react\";\r\nimport s from \"./Musik.module.css\"\r\n\r\nconst Music = () => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPost.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileInfo\\ProfileInfo.tsx",["127"],"import React from \"react\";\r\nimport { UserProfileType } from \"../../../redux/profile-reducer\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preolader/Preolader\";\r\n\r\ntype ProfileType = {\r\n  profile: UserProfileType | null\r\n\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileType) => {\r\ndebugger\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src=\"https://tinypng.com/images/social/website.jpg\" alt=\"\"/>\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.large} />\r\n        ava + description\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\Post\\Post.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogItem\\DialogItem.tsx",["128"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"../Dialogs.module.css\"\r\nimport {v1} from \"uuid\";\r\n\r\ntype DialogsItemType = {\r\n  name: string\r\n  _id: string\r\n}\r\n\r\nconst DialogItem = (props: DialogsItemType) => {\r\n  let path = \"/dialogs/\" + props._id;\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\Message\\Message.tsx",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\store.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\profile-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\dialogs-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\sidebar-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\redux-store.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\MyPost\\MyPostContainer.tsx",["129"],"import React, {Dispatch} from \"react\";\r\nimport {addPostAC, changeNewTextAC, PostType} from \"../../../redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../../redux/redux-store\";\r\nimport {Action} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n  message: string,\r\n  posts: Array<PostType>\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n  addPost: () => void\r\n  onPostChange: (newText: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    message: state.profilePage.newPostText,\r\n    posts: state.profilePage.posts,\r\n  }\r\n};\r\n\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<Action<string>>): MapDispatchToPropsType => {\r\n  return {\r\n    addPost: () => {\r\n      dispatch(addPostAC())\r\n    },\r\n    onPostChange: (newText: string) => {\r\n      dispatch(changeNewTextAC(newText));\r\n    },\r\n  }\r\n};\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps) (MyPost)\r\n\r\nexport default MyPostContainer;\r\n","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Dialogs\\DialogsContainer.tsx",["130"],"import React, {Dispatch} from \"react\";\r\nimport {sendMessageBodyAC,changeNewMessageBodyAC,DialogType, MessageType} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport { RootStateType } from \"../../redux/redux-store\";\r\nimport { Action } from \"redux\";\r\n\r\ntype MapStateToPropsType ={\r\n  dialogs: Array<DialogType>\r\n  message: string\r\n  messages: Array<MessageType>\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n  onSendMessageClick: () => void\r\n  onNewMessageChange: (newTextBody: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStateToPropsType=> {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    message: state.dialogsPage.newMessageBody,\r\n    messages: state.dialogsPage.messages\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<Action<string>>): MapDispatchToPropsType => {\r\n  return {\r\n    onSendMessageClick: () => {\r\n      dispatch(sendMessageBodyAC())\r\n    },\r\n    onNewMessageChange: (newTextBody: string) => {\r\n      dispatch(changeNewMessageBodyAC(newTextBody))\r\n    },\r\n  }\r\n};\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (Dialogs);\r\n\r\nexport default DialogsContainer;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\redux\\users-reducer.ts",[],"C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Users\\UsersContainer.tsx",["131"],"import React, {Dispatch} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {\r\n  follow,\r\n  setCurrentPage,\r\n  setUsers,\r\n  setTotalUsersCount, toggleIsLoading,\r\n  unfollow,\r\n  UsersType\r\n} from \"../../redux/users-reducer\";\r\nimport axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preolader/Preolader\";\r\n\r\ntype MapStateToProps = {\r\n  users: Array<UsersType>\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  totalCount: number\r\n  isLoading: boolean\r\n}\r\n\r\n// type MapDispatchToProps = {\r\n//   follow: (userId: number) => void,\r\n//   unfollow: (userId: number) => void,\r\n//   setUser: (users: Array<UsersType>) => void,\r\n//   setCurrentPage: (pageNumber: number) => void,\r\n//   setTotalUsersCount: (totalCount: number) => void,\r\n//   toggleIsLoading: (isLoading: boolean) => void\r\n// }\r\n\r\ntype UsersPropsType = {\r\n  users: Array<UsersType>\r\n  unfollow: (id: number) => void\r\n  follow: (id: number) => void\r\n  setUsers: (users: Array<UsersType>) => void\r\n  setCurrentPage: (currentPage: number) => void\r\n  setTotalUsersCount: (totalCount: number) => void\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  currentPage: number\r\n  isLoading: boolean\r\n  toggleIsLoading: (isLoading: boolean) => void\r\n}\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n  componentDidMount() {\r\n    this.props.toggleIsLoading(true)\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n      .then(response => {\r\n        this.props.toggleIsLoading(false);\r\n        this.props.setUsers(response.data.items);\r\n        this.props.setTotalUsersCount(response.data.totalCount);\r\n      })\r\n  }\r\n\r\n  onPageChanged = (pageNumber: number) => {\r\n    this.props.setCurrentPage(pageNumber);\r\n    this.props.toggleIsLoading(true);\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n      .then(response => {\r\n        this.props.toggleIsLoading(false);\r\n        this.props.setUsers(response.data.items);\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    return <>\r\n      { this.props.isLoading ? <Preloader /> : null }\r\n      <Users totalUsersCount={this.props.totalUsersCount}\r\n             pageSize={this.props.pageSize}\r\n             currentPage={this.props.currentPage}\r\n             users={this.props.users}\r\n             onPageChanged={this.onPageChanged}\r\n             unfollow={this.props.unfollow}\r\n             follow={this.props.follow}\r\n      />\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStateToProps => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    totalCount: state.usersPage.totalUsersCount,\r\n    isLoading: state.usersPage.isLoading,\r\n  }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch: Dispatch<Action<string>>): MapDispatchToProps => {\r\n//   return {\r\n//     follow: (userId: number) => {\r\n//       dispatch(followAC(userId));\r\n//     },\r\n//     unfollow: (userId: number) => {\r\n//       dispatch(unfollowAC(userId));\r\n//     },\r\n//     setUser: (users: Array<UsersType>) => {\r\n//       dispatch(setUsersAC(users));\r\n//     },\r\n//     setCurrentPage: (pageNumber: number) => {\r\n//       dispatch(setCurrentPageAC(pageNumber));\r\n//     },\r\n//     setTotalUsersCount: (totalCount: number) => {\r\n//       dispatch(setUsersTotalCountAC(totalCount));\r\n//     },\r\n//     toggleIsLoading: (isLoading:boolean ) => {\r\n//       dispatch(toggleIsLoadingAC(isLoading));\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default connect(mapStateToProps, {\r\n  follow,\r\n  unfollow,\r\n  setUsers,\r\n  setCurrentPage,\r\n  setTotalUsersCount,\r\n  toggleIsLoading,\r\n})(UsersContainer);","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Users\\Users.tsx",["132"],"import s from \"./User.module.css\";\r\nimport UsersPhoto from \"../../assets/images/img.ava.png\";\r\nimport React from \"react\";\r\nimport {UsersType} from \"../../redux/users-reducer\";\r\n\r\nexport type UsersPropsType = {\r\n  users: Array<UsersType>\r\n  unfollow: (id: number) => void\r\n  follow: (id: number) => void\r\n  onPageChanged: (p: number) => void\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  currentPage: number\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n\r\n  let pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pageCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div>\r\n        {pages.map(p => {\r\n          return <span onClick={(e) => props.onPageChanged(p)}\r\n                       className={p === props.currentPage ? s.selectedPage : \"\"}>| {p} |</span>\r\n        })}\r\n      </div>\r\n\r\n      {props.users.map(u => <div key={u.id}>\r\n        <span>\r\n          <div>\r\n            <img src={u.photos.small !== null ? u.photos.small : UsersPhoto} className={s.userPhoto}/>\r\n          </div>\r\n          <div>\r\n            {u.followed\r\n              ? <button onClick={() => props.unfollow(u.id)}>Unfollow</button>\r\n              : <button onClick={() => props.follow(u.id)}>Follow</button>}\r\n          </div>\r\n        </span>\r\n        <span>\r\n          <span>\r\n            <div>{u.name}</div>\r\n            <div>{u.status}</div>\r\n          </span>\r\n          <span>\r\n            <div>{\"u.location.country\"}</div>\r\n            <div>{\"u.location.city\"}</div>\r\n          </span>\r\n        </span>\r\n      </div>)}\r\n    </div>\r\n  )\r\n}\r\nexport default Users;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\common\\Preolader\\Preolader.tsx",["133"],"import preloader from \"../../../assets/images/preolader.svg\";\r\nimport React from \"react\";\r\n\r\ntype PreloaderType = {}\r\n\r\nlet Preloader: React.FC<PreloaderType> = () => {\r\n return (\r\n   <>\r\n     <img src={preloader} />\r\n   </>\r\n )\r\n}\r\n\r\nexport default Preloader;","C:\\Users\\User\\Desktop\\networkReact\\02networkReakt_TS\\my-app\\src\\component\\Profile\\ProfileContainer.tsx",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":9},{"ruleId":"138","severity":1,"message":"139","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":9},{"ruleId":"138","severity":1,"message":"139","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":9},{"ruleId":"142","severity":1,"message":"143","line":23,"column":9,"nodeType":"144","endLine":23,"endColumn":49},{"ruleId":"138","severity":1,"message":"145","line":4,"column":9,"nodeType":"140","messageId":"141","endLine":4,"endColumn":11},{"ruleId":"138","severity":1,"message":"146","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"146","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"147","line":1,"column":16,"nodeType":"140","messageId":"141","endLine":1,"endColumn":24},{"ruleId":"142","severity":1,"message":"143","line":39,"column":13,"nodeType":"144","endLine":39,"endColumn":103},{"ruleId":"142","severity":1,"message":"143","line":9,"column":6,"nodeType":"144","endLine":9,"endColumn":29},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"@typescript-eslint/no-unused-vars","'s' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'v1' is defined but never used.","'React' is defined but never used.","'Dispatch' is defined but never used.","no-global-assign","no-unsafe-negation"]